(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{943:function(s,t,a){"use strict";a.r(t);var e=a(28),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[s._v("#")]),s._v(" 题目")]),s._v(" "),a("ul",[a("li",[s._v("JS中使用"),a("code",[s._v("typeof")]),s._v("能得到的哪些类型")]),s._v(" "),a("li",[s._v("何时使用"),a("code",[s._v("===")]),s._v("何时使用"),a("code",[s._v("==")])]),s._v(" "),a("li",[s._v("JS中有哪些内置函数")]),s._v(" "),a("li",[s._v("JS变量按照存储方式区分为哪些类型，并描述其特点")]),s._v(" "),a("li",[s._v("如何理解JSON")])]),s._v(" "),a("p",[s._v("请先自己思考每个题目的具体考点是什么？")]),s._v(" "),a("h2",{attrs:{id:"变量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[s._v("#")]),s._v(" 变量类型")]),s._v(" "),a("p",[s._v("JS变量最基本的分类就是"),a("strong",[s._v("值类型")]),s._v("和"),a("strong",[s._v("引用类型")]),s._v("，两者有何区别呢，可以通过例子看出来。")]),s._v(" "),a("p",[s._v("以下是值类型的一个例子")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("以下是引用类型的一个例子")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[a("code",[s._v("typeof")]),s._v("可以知道一个值类型是什么类型，而对于引用类型，它就无能为力了。但是它可以将引用类型区分出"),a("code",[s._v("function")]),s._v("，为什么 ———— 因为"),a("code",[s._v("function")]),s._v("相对于其他引用类型（如对象、数组）来说，具有非常特殊的意义，JS 中的函数非常重要，接下来的原型、作用域都会深入讲解函数。")]),s._v(" "),a("p",[s._v("JS 中的某些表现，就已经体现了函数的特殊意义，例如：对象和数组，JS中没有内置的（不考虑 JS-WEB-API），而函数却内置了很多，例如 "),a("code",[s._v("Object")]),s._v(" "),a("code",[s._v("Array")]),s._v(" "),a("code",[s._v("Boolean")]),s._v(" "),a("code",[s._v("Number")]),s._v(" "),a("code",[s._v("String")]),s._v(" "),a("code",[s._v("Function")]),s._v(" "),a("code",[s._v("Date")]),s._v(" "),a("code",[s._v("RegExp")]),s._v(" "),a("code",[s._v("Error")]),s._v("。这些函数 JS 本身就有，要是没有它们，就没法愉快的写 JS 代码了。因为他们是基础数据类型的构造函数（后面会讲解）")]),s._v(" "),a("p",[a("code",[s._v("typeof")]),s._v("可以区分类型有"),a("code",[s._v("number")]),s._v(" "),a("code",[s._v("string")]),s._v(" "),a("code",[s._v("boolean")]),s._v(" "),a("code",[s._v("undefined")]),s._v("（值类型） "),a("code",[s._v("function")]),s._v(" "),a("code",[s._v("object")]),s._v("（引用类型）")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 特例")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// object 因为 null 也是引用类型。null 就相当于引用类型中的 undefined")]),s._v("\n")])])]),a("p",[s._v("那么针对第二个例子，如何将"),a("code",[s._v("a")]),s._v("的内容复制给"),a("code",[s._v("b")]),s._v("，并且保证"),a("code",[s._v("b")]),s._v("的修改不会影响到"),a("code",[s._v("a")]),s._v("呢？那就需要"),a("strong",[s._v("深度复制")]),s._v("，意思就是对"),a("code",[s._v("a")]),s._v("的属性进行递归遍历，再依次复制，这块我们会放在后面专门讲解。")]),s._v(" "),a("h2",{attrs:{id:"变量计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量计算"}},[s._v("#")]),s._v(" 变量计算")]),s._v(" "),a("blockquote",[a("p",[s._v("本节专门讲解值类型的计算，引用类型的计算放在后面作为“JS 算法”统一讲解。")])]),s._v(" "),a("p",[s._v("组简单的计算，就是数字的加减乘除、字符串的拼接和替换，这个太简单了，这里不提了。但是 JS 在值类型的运算过程中，特别需要注意和利用"),a("strong",[s._v("强制类型转换")]),s._v("这一特性，有以下场景：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("字符串拼接")])]),s._v(" "),a("li",[a("strong",[a("code",[s._v("==")])])]),s._v(" "),a("li",[a("strong",[s._v("逻辑运算（"),a("code",[s._v("if")]),s._v(" "),a("code",[s._v("!")]),s._v(" "),a("code",[s._v("||")]),s._v(" "),a("code",[s._v("&&")]),s._v("）")])])]),s._v(" "),a("p",[s._v("字符串拼接最常见的错误如下，特别要注意。如何规避呢 ———— 对进行计算的变量通过"),a("code",[s._v("typeof")]),s._v("来判断类型 ———— 太麻烦？编码本身就是一个体力活！")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 110")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '10010'")]),s._v("\n")])])]),a("p",[s._v("接下来，"),a("code",[s._v("==")]),s._v("也会进行强制类型转换，如")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100'")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),a("p",[s._v("针对"),a("code",[s._v("100 == '100'")]),s._v("就是和拼接字符串一样的类型转换，而针对下面两个例子，就是一个逻辑运算上的强制类型转换（马上会讲解）。所以，要求你写 JS 代码时，所有的地方都要使用"),a("code",[s._v("===")]),s._v("而不能使用"),a("code",[s._v("==")]),s._v("，但是阅读 jquery 源码后我发现一个特例，就是"),a("code",[s._v("obj.a == null")]),s._v("，使用很简洁。")]),s._v(" "),a("p",[s._v("最后，逻辑运算中的强制类型转换，先以"),a("code",[s._v("if")]),s._v("为例说明")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ....")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ....")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ....")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("所有经过"),a("code",[s._v("if")]),s._v("判断的变量，都会进行逻辑运算的强制类型转换，转换为"),a("code",[s._v("true")]),s._v("或者"),a("code",[s._v("false")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'abc'")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("abc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断一个变量会被当做 true 还是 false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("日常开发中，以下变量会被转换为"),a("code",[s._v("false")])]),s._v(" "),a("ul",[a("li",[s._v("0")]),s._v(" "),a("li",[s._v("NaN")]),s._v(" "),a("li",[s._v("''")]),s._v(" "),a("li",[s._v("null")]),s._v(" "),a("li",[s._v("undefined")]),s._v(" "),a("li",[s._v("false 本身")])]),s._v(" "),a("p",[s._v("除了以上几个，其他的都会被转换为"),a("code",[s._v("true")]),s._v("。"),a("strong",[s._v("除了"),a("code",[s._v("if")]),s._v("之外，"),a("code",[s._v("!")]),s._v(" "),a("code",[s._v("||")]),s._v(" "),a("code",[s._v("&&")]),s._v("这三个运算符也会进行同样的转换，跟"),a("code",[s._v("if")]),s._v("是一个道理")]),s._v("。因此，如何快速判断一个变量将会被"),a("code",[s._v("if")]),s._v("转换为什么呢？————"),a("code",[s._v("!!a")])]),s._v(" "),a("h2",{attrs:{id:"答题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#答题"}},[s._v("#")]),s._v(" 答题")]),s._v(" "),a("h3",{attrs:{id:"js中使用typeof能得到的哪些类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中使用typeof能得到的哪些类型"}},[s._v("#")]),s._v(" JS中使用"),a("code",[s._v("typeof")]),s._v("能得到的哪些类型")]),s._v(" "),a("p",[s._v("针对这个题目，可以通过以下程序进行验证")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// string")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// boolean")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// object")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// object")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// object")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// function")]),s._v("\n")])])]),a("h3",{attrs:{id:"何时使用-何时使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何时使用-何时使用"}},[s._v("#")]),s._v(" 何时使用"),a("code",[s._v("===")]),s._v(" 何时使用"),a("code",[s._v("==")])]),s._v(" "),a("p",[s._v("首先你得明白两者的区别。"),a("code",[s._v("==")]),s._v("会先试图类型转换，然后再比较，而"),a("code",[s._v("===")]),s._v("不会类型转换，直接比较。如下例子：")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),a("p",[s._v("根据 jQuery 源码中的写法，只推荐在一个地方用"),a("code",[s._v("==")]),s._v("，其他地方都必须用"),a("code",[s._v("===")]),s._v("。这个用"),a("code",[s._v("==")]),s._v("的地方就是：")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里相当于 obj.a === null || obj.a === undefined ，简写形式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("编程是需要绝对严谨的态度，我们只在这一个地方让它进行类型转换，来简化我们的写法，因为这个场景非常简单和固定。而其他场景下，我们都必须使用"),a("code",[s._v("===")]),s._v("，除非有特殊的业务需要。")]),s._v(" "),a("h3",{attrs:{id:"js中有哪些内置函数-数据封装类对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中有哪些内置函数-数据封装类对象"}},[s._v("#")]),s._v(" JS中有哪些内置函数 —— 数据封装类对象")]),s._v(" "),a("p",[a("code",[s._v("Object")]),s._v(" "),a("code",[s._v("Array")]),s._v(" "),a("code",[s._v("Boolean")]),s._v(" "),a("code",[s._v("Number")]),s._v(" "),a("code",[s._v("String")]),s._v(" "),a("code",[s._v("Function")]),s._v(" "),a("code",[s._v("Date")]),s._v(" "),a("code",[s._v("RegExp")]),s._v(" "),a("code",[s._v("Error")])]),s._v(" "),a("p",[s._v("对于这种问题，回复时能把基本常用的回答上来就可以，没必要背书把所有的都写上。")]),s._v(" "),a("h3",{attrs:{id:"js变量按照存储方式区分为哪些类型-并描述其特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js变量按照存储方式区分为哪些类型-并描述其特点"}},[s._v("#")]),s._v(" JS变量按照存储方式区分为哪些类型，并描述其特点")]),s._v(" "),a("ul",[a("li",[s._v("值类型 "),a("code",[s._v("undefined")]),s._v(" "),a("code",[s._v("string")]),s._v(" "),a("code",[s._v("number")]),s._v(" "),a("code",[s._v("boolean")])]),s._v(" "),a("li",[s._v("引用类型 "),a("code",[s._v("object")]),s._v(" "),a("code",[s._v("function")])])]),s._v(" "),a("p",[s._v("最后补充一点，在 JS 中，所有的引用类型都可以自由设置属性")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nfn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n")])])]),a("h3",{attrs:{id:"如何理解json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何理解json"}},[s._v("#")]),s._v(" 如何理解JSON")]),s._v(" "),a("p",[s._v("这个问题，很容易被一些初学者误答。其实，JSON 是什么？从 JS 角度回答，太简单了，"),a("code",[s._v("console.log(JSON)")]),s._v("得到"),a("code",[s._v("JSON")]),s._v("只是一个对象，有"),a("code",[s._v("parse")]),s._v("和"),a("code",[s._v("stringify")]),s._v("两个方法，使用也非常简单")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JOSN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"a":10,"b":20}\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("我之所以误答，就是怕初学者把这个问题搞大，因为 json 也是一种数据格式，这一点和 xml 一样。但是在 JS 的面试题中，如果问到这个问题，直接说明"),a("code",[s._v("parse")]),s._v("和"),a("code",[s._v("stringify")]),s._v("两个方法的用法即可，面试官如果有追问，你再去继续回答。")])])}),[],!1,null,null,null);t.default=n.exports}}]);