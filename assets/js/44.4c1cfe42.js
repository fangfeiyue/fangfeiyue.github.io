(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{1245:function(t,s,a){"use strict";a.r(s);var r=a(28),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"http协议特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http协议特点"}},[t._v("#")]),t._v(" HTTP协议特点")]),t._v(" "),r("ul",[r("li",[t._v("支持客户/服务器模式")])]),t._v(" "),r("p",[t._v("客户/服务器模式工作的方式是由客户端向服务器发出请求，服务器端响应请求，并进行相应服务。")]),t._v(" "),r("ul",[r("li",[t._v("简单快速")])]),t._v(" "),r("p",[t._v("客户端向服务器请求服务时，只需要传送请求方法和路径；由于 HTTP 协议简单，使得 HTTP 服务器的程序规模比较小，因而通信速度快。")]),t._v(" "),r("ul",[r("li",[t._v("灵活")])]),t._v(" "),r("p",[t._v("HTTP 允许传输任意类型的数据对象；传输的类型有 Content-Type 加以标记。")]),t._v(" "),r("ul",[r("li",[t._v("无连接")])]),t._v(" "),r("p",[t._v("无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。")]),t._v(" "),r("ul",[r("li",[t._v("无状态")])]),t._v(" "),r("p",[t._v("HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就很快。")]),t._v(" "),r("h2",{attrs:{id:"详解url与uri的区别与联系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#详解url与uri的区别与联系"}},[t._v("#")]),t._v(" 详解URL与URI的区别与联系")]),t._v(" "),r("p",[t._v("URI 分为 URL 和 URN 或同时具备 locators 和 names 特性的一个东西。URN 的作用就好像一个人的名字，URL 就像一个人的地址。换句话说 URN 确定了东西的身份，URL 提供了找到它的方式。")]),t._v(" "),r("p",[t._v("URL 是 URI 的子集，除了确定一个资源，还提供了一种定位该资源的主要访问机制。")]),t._v(" "),r("p",[t._v("URL 是 URI 的一种，但不是所有的 URI 都是 URL 。\nURI 和 URL 最大的差别是 ”访问机制“。\nURN 是唯一标识的一部分，是身份信息。")]),t._v(" "),r("h2",{attrs:{id:"http报文结构分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http报文结构分析"}},[t._v("#")]),t._v(" HTTP报文结构分析")]),t._v(" "),r("h3",{attrs:{id:"请求报文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#请求报文"}},[t._v("#")]),t._v(" 请求报文")]),t._v(" "),r("p",[t._v("请求报文组成部分：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(719),alt:""}})]),t._v(" "),r("p",[t._v("HTTP 的报文头大体可分为四类：通用报文头、请求报文头、响应报文头和实体报文头。")]),t._v(" "),r("p",[t._v("常见的通用报文头：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(720),alt:""}})]),t._v(" "),r("p",[t._v("常见的请求报文头：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(721),alt:""}})]),t._v(" "),r("p",[t._v("常见的响应报文头：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(722),alt:""}})]),t._v(" "),r("h2",{attrs:{id:"http请求方法剖析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http请求方法剖析"}},[t._v("#")]),t._v(" HTTP请求方法剖析")]),t._v(" "),r("h2",{attrs:{id:"http响应状态码拆解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http响应状态码拆解"}},[t._v("#")]),t._v(" HTTP响应状态码拆解")]),t._v(" "),r("h2",{attrs:{id:"实验-用telnet分析http协议的通讯过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实验-用telnet分析http协议的通讯过程"}},[t._v("#")]),t._v(" 实验：用telnet分析http协议的通讯过程")]),t._v(" "),r("h2",{attrs:{id:"http状态管理-cookie与session"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http状态管理-cookie与session"}},[t._v("#")]),t._v(" HTTP状态管理：Cookie与Session")])])}),[],!1,null,null,null);s.default=e.exports},719:function(t,s,a){t.exports=a.p+"assets/img/13.d394cbea.png"},720:function(t,s,a){t.exports=a.p+"assets/img/14.f4b08432.png"},721:function(t,s,a){t.exports=a.p+"assets/img/15.fceadd81.png"},722:function(t,s,a){t.exports=a.p+"assets/img/16.5e9ef9f9.png"}}]);