(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{873:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("模板编译的主要目标就是生成渲染函数，通过执行渲染函数生成新的vnode，然后使用这个新的vnode渲染页面。")]),t._v(" "),a("p",[t._v("怎么将模板编译成渲染函数呢？")]),t._v(" "),a("ul",[a("li",[t._v("将模板解析为AST")]),t._v(" "),a("li",[t._v("遍历AST标记静态节点，因为静态节点不需要重新渲染。")]),t._v(" "),a("li",[t._v("使用AST生成渲染函数")])]),t._v(" "),a("p",[t._v("在模板编译中分别抽象出三个模块来实现：")]),t._v(" "),a("ul",[a("li",[t._v("解析器\n作用是将模板解析成AST。解析器内部有很多小解析器：过滤器解析器、文本解析器和HTML解析器，通过一条主线将这些小解析器组合到一起。主线上做的事就是监听HTML解析器。每当触发钩子函数时，就生成一个对应的AST节点。")]),t._v(" "),a("li",[t._v("优化器\n遍历AST，检测出所有静态子树（永远都不会发生变化的DOM节点）并给其打标记。当重新渲染时就不需要为打上标记的静态节点创建新的虚拟节点，而是直接克隆已存在的虚拟节点，无需对比更新。")]),t._v(" "),a("li",[t._v("代码生成器\n将AST转换成渲染函数中的内容")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("生成的代码字符串")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('with(this){return _c(\'p\',{attrs:{"class":"p1"},on:{"click":c}},[_v("1")])}')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("p",[t._v("这个代码字符串会被放到渲染函数中，当渲染函数被导出到外界，模板编译完成。")]),t._v(" "),a("p",[t._v("怎么将代码字符串放到函数中呢？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("with(this){return 'hello world'}")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hello "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello world"')]),t._v("\n")])])]),a("p",[t._v("上述代码使用了"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/Function",target:"_blank",rel:"noopener noreferrer"}},[t._v("Function"),a("OutboundLink")],1),t._v("构造函数，至于它的具体用法这里不再赘述，可以点击链接进去看看。")]),t._v(" "),a("p",[t._v("渲染函数之所以能创建vnode是因为代码字符串中有很多创建vnode方法。")]),t._v(" "),a("p",[t._v("AST其实和vnode有点类似，都是使用JavaScript中的对象来表示节点。")])])}),[],!1,null,null,null);s.default=e.exports}}]);