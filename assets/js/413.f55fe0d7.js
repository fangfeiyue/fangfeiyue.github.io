(window.webpackJsonp=window.webpackJsonp||[]).push([[413],{1207:function(n,t,e){"use strict";e.r(t);var o=e(28),s=Object(o.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[this._v("11-1 购物车的样式开发 (19:21)\n视频：\n11-2 Vuex中购物车数据结构的设计（1） (16:26)\n视频：\n11-3 Vuex中购物车数据结构的设计（2） (08:40)\n视频：\n11-4 使用 computed 完成订单价格计算 (18:14)\n视频：\n11-5 购物车及列表双向数据同步功能开发（1） (14:31)\n视频：\n11-6 购物车及列表双向数据同步功能开发（2） (08:50)\n视频：\n11-7 根据购物车选中状态计算订单金额（1） (12:51)\n视频：\n11-8 根据购物车选中状态计算订单金额（2） (11:37)\n视频：\n11-9 全选及清空购物车的功能实现（1） (15:14)\n视频：\n11-10 全选及清空购物车的功能实现（2） (14:24)\n视频：\n11-11 商家详情页面代码优化（1） (11:25)\n视频：\n11-12 商家详情页面代码优化（2） (06:27)\n视频：\n11-13 购物车数据结构的变更（1） (09:12)\n视频：\n11-14 购物车数据结构的变更（2） (11:05)\n作业：\n11-15 【讨论题】作为前端，你在开发中是如何进行代码调试 Debug\n视频：\n11-16 通过 LocalStorage 实现购物车信息持久存储（1） (13:46)\n视频：\n11-17 通过 LocalStorage 实现购物车信息持久存储（2） (10:02)")])])}),[],!1,null,null,null);t.default=s.exports}}]);