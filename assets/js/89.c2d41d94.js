(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{379:function(t,s,a){t.exports=a.p+"assets/img/1.99c5d36d.png"},858:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"节点层级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#节点层级"}},[t._v("#")]),t._v(" 节点层级")]),t._v(" "),n("p",[t._v("document 节点表示每个文档的根节点，根节点的唯一子节点是"),n("code",[t._v("<html>")]),t._v("元素，我们称之为文档元素。DOM 中总共有 12 种节点类型，这些类型都继承一种基本类型")]),t._v(" "),n("h3",{attrs:{id:"node-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-类型"}},[t._v("#")]),t._v(" Node 类型")]),t._v(" "),n("p",[t._v("每个节点都有 nodeType 属性，表示该节点的类型。节点类型由定义在 Node 类型上的 12 个数值\n常量表示：")]),t._v(" "),n("ul",[n("li",[t._v("Node.ELEMENT_NODE（1）")]),t._v(" "),n("li",[t._v("Node.ATTRIBUTE_NODE（2）")]),t._v(" "),n("li",[t._v("Node.TEXT_NODE（3）")]),t._v(" "),n("li",[t._v("Node.CDATA_SECTION_NODE（4）")]),t._v(" "),n("li",[t._v("Node.ENTITY_REFERENCE_NODE（5）")]),t._v(" "),n("li",[t._v("Node.ENTITY_NODE（6）")]),t._v(" "),n("li",[t._v("Node.PROCESSING_INSTRUCTION_NODE（7）")]),t._v(" "),n("li",[t._v("Node.COMMENT_NODE（8）")]),t._v(" "),n("li",[t._v("Node.DOCUMENT_NODE（9）")]),t._v(" "),n("li",[t._v("Node.DOCUMENT_TYPE_NODE（10）")]),t._v(" "),n("li",[t._v("Node.DOCUMENT_FRAGMENT_NODE（11）")]),t._v(" "),n("li",[t._v("Node.NOTATION_NODE（12）")])]),t._v(" "),n("ol",[n("li",[t._v("nodeName 与 nodeValue 保存着有关节点的信息。对元素而言，nodeName 始终等于元素的标签名，而 nodeValue 则始终为 null。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会显示元素的标签名")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("节点关系")])]),t._v(" "),n("p",[t._v("每个节点都有一个 childNodes 属性，其中包含一个 NodeList 的实例。NodeList 是一个类数组\n对象，用于存储可以按位置存取的有序节点。")]),t._v(" "),n("p",[t._v("下面的例子展示了如何使用中括号或使用 item()方法访问 NodeList 中的元素：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" secondChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("item")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),n("p",[t._v("每个节点都有一个 parentNode 属性，指向其 DOM 树中的父元素。")]),t._v(" "),n("p",[t._v("previousSibling 和 nextSibling 可以在这个列表的节点间导航。这个列表中第一个节点的previousSibling 属性是 null，最后一个节点的nextSibling 属性也是 null")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextSibling "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Last node in the parent\'s childNodes list."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("previousSibling "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"First node in the parent\'s childNodes list."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),n("p",[t._v("firstChild 和 lastChild 分别指向childNodes 中的第一个和最后一个子节点。")]),t._v(" "),n("p",[t._v("节点关系图\n"),n("img",{attrs:{src:a(379),alt:"节点关系图"}})]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("操纵节点")])]),t._v(" "),n("p",[t._v("appendChild()，用于在 childNodes 列表末尾添加节点，返回新添加的节点。如果把文档中已经存在的节点传给 appendChild()，则这个节点会从之前的位置被转移到新位置。")]),t._v(" "),n("p",[t._v("insertBefore()方法接收两个参数：要插入的节点和参照节点。调用这个方法后，要插入的节点会变成参照节点的\n前一个同胞节点，并被返回。如果参照节点是 null，则 insertBefore()与 appendChild()效果相同。")]),t._v(" "),n("p",[t._v("appendChild() 和 insertBefore() 在插入节点时不会删除任何已有节点。")]),t._v(" "),n("p",[t._v("replaceChild()方法接收两个参数：要插入的节点和要替换的节点。要替换的节点会被返回并从文档树中完全移除，要插入的节点会取而代之。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" returnedNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" someNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("removeChild()方法移除节点。这个方法接收一个参数，即要移除的节点。返回被移除的节点")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("其他方法\ncloneNode()会返回与调用它的节点一模一样的节点。cloneNode()方法接收一个布尔值参数，表示是否深复制。")])]),t._v(" "),n("p",[t._v("cloneNode()方法不会复制添加到 DOM 节点的 JavaScript 属性，比如事件处理程序。这个方法只复制 HTML 属性，以及可选地复制子节点。除此之外则一概不会复制。IE 在很长时间内会复制事件处理程序，这是一个 bug，所以推荐在复制前先删除事件处\n理程序。")]),t._v(" "),n("p",[t._v("normalize()是处理文档子树中的文本节点,在节点上调用 normalize()方法会检测这个节点的所有后代，从中搜索上述两种情形。如果发现空文本节点，则将其删除；如果两个同胞节点是相邻的，则将其合并为一个文本节点。")]),t._v(" "),n("h3",{attrs:{id:"document-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#document-类型"}},[t._v("#")]),t._v(" Document 类型")]),t._v(" "),n("ol",[n("li",[t._v("文档子节点\ndocument对象的documentElement 属性，指向 HTML 页面中的"),n("code",[t._v("<html>")]),t._v("元素")])]),t._v(" "),n("p",[t._v("document 对象的body 属性，直接指向"),n("code",[t._v("<body>")]),t._v("元素")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("文档信息")])]),t._v(" "),n("p",[t._v("title属性是包含"),n("code",[t._v("<title>")]),t._v("元素中的文本，修改 title 属性并不会改变"),n("code",[t._v("<title>")]),t._v("元素。")]),t._v(" "),n("p",[t._v("URL属性包含当前页面的完整URL")]),t._v(" "),n("p",[t._v("domain包含页面的域名")]),t._v(" "),n("p",[t._v("referrer属性包含链接到当前页面的那个页面的 URL。如果当前页面没有来源，则 referrer 属性包含空字符串")]),t._v(" "),n("p",[t._v("这些属性中只有 domain 属性是可以设置的")]),t._v(" "),n("p",[t._v('domain 属性设置的值是有限制的，如果 URL包含子域名如 p2p.wrox.com，则可以将 domain 设置为"wrox.com"（URL包含“www”时也一样，比如 www.wrox.com）。不能给这个属性设置 URL 中不包含的值，比如：')]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 页面来自 p2p.wrox.com")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrox.com"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nczonline.net"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出错！")]),t._v("\n")])])]),n("p",[t._v('浏览器对 domain 属性还有一个限制，即这个属性一旦放松就不能再收紧。比如，把document.domain 设置为"wrox.com"之后，就不能再将其设置回"p2p.wrox.com"，后者会导致错误，比如：')]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 页面来自 p2p.wrox.com")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrox.com"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 放松，成功")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p2p.wrox.com"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 收紧，错误！")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("定位元素")])]),t._v(" "),n("p",[t._v("document.getElementById()通过id获取元素")]),t._v(" "),n("p",[t._v("document.getElementsByTagName()通过元素的标签名返回包含零个或多个元素的 NodeList")]),t._v(" "),n("p",[t._v("document.getElementsByName()获取给定 name 属性的所有元素")]),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[t._v("特殊集合")])]),t._v(" "),n("p",[t._v("document.links 包含文档中所有带 href 属性的"),n("code",[t._v("<a>")]),t._v("元素。")]),t._v(" "),n("p",[t._v("document.forms 包含文档中所有"),n("code",[t._v("<form>")]),t._v("元素。")]),t._v(" "),n("p",[t._v("document.links 包含文档中所有带 href 属性的"),n("code",[t._v("<a>")]),t._v("元素。")]),t._v(" "),n("p",[t._v("document.images 包含文档中所有"),n("code",[t._v("<img>")]),t._v("元素")]),t._v(" "),n("ol",{attrs:{start:"5"}},[n("li",[t._v("DOM 兼容性检测")])]),t._v(" "),n("p",[t._v("hasFeature改方法已废弃")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hasXmlDom "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XML"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),n("ol",{attrs:{start:"6"}},[n("li",[t._v("文档写入\nwrite()和 writeln()方法都接收一个字符串参数，可以将这个字符串写入网页中。write()简单地写入文本，而 writeln()还会在字符串末尾追加一个换行符（\\n）。这两个方法可以用来在页面加载期间向页面中动态添加内容。如果是在页面加载完之后再调用 document.write()，则输出的内容会重写整个页面")])]),t._v(" "),n("p",[t._v("open()和 close()方法分别用于打开和关闭网页输出流。")]),t._v(" "),n("h3",{attrs:{id:"element-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#element-类型"}},[t._v("#")]),t._v(" Element 类型")]),t._v(" "),n("p",[t._v("nodeName 或 tagName 属性来获取元素的标签名,返回的是大写的标签名")]),t._v(" "),n("h3",{attrs:{id:"text-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#text-类型"}},[t._v("#")]),t._v(" Text 类型")]),t._v(" "),n("h3",{attrs:{id:"comment-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#comment-类型"}},[t._v("#")]),t._v(" Comment 类型")]),t._v(" "),n("h3",{attrs:{id:"cdatasection-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cdatasection-类型"}},[t._v("#")]),t._v(" CDATASection 类型")]),t._v(" "),n("h3",{attrs:{id:"documenttype-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#documenttype-类型"}},[t._v("#")]),t._v(" DocumentType 类型")]),t._v(" "),n("h3",{attrs:{id:"documentfragment-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#documentfragment-类型"}},[t._v("#")]),t._v(" DocumentFragment 类型")]),t._v(" "),n("h3",{attrs:{id:"attr-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#attr-类型"}},[t._v("#")]),t._v(" Attr 类型")]),t._v(" "),n("h2",{attrs:{id:"dom编程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom编程"}},[t._v("#")]),t._v(" DOM编程")]),t._v(" "),n("h3",{attrs:{id:"动态脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态脚本"}},[t._v("#")]),t._v(" 动态脚本")]),t._v(" "),n("h3",{attrs:{id:"动态样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态样式"}},[t._v("#")]),t._v(" 动态样式")]),t._v(" "),n("h3",{attrs:{id:"操作表格"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作表格"}},[t._v("#")]),t._v(" 操作表格")]),t._v(" "),n("h3",{attrs:{id:"使用-nodelist"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-nodelist"}},[t._v("#")]),t._v(" 使用 NodeList")]),t._v(" "),n("h2",{attrs:{id:"mutationobserver-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mutationobserver-接口"}},[t._v("#")]),t._v(" MutationObserver 接口")]),t._v(" "),n("p",[t._v("使用 MutationObserver 可以观察整个文档、DOM 树的一部分，或某个元素。此外还可以观察元素属性、子节点、文本，或者前三者任意组合的变化。")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("p",[t._v("新引进 MutationObserver 接口是为了取代废弃的 MutationEvent。")])]),t._v(" "),n("h3",{attrs:{id:"基本用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[t._v("#")]),t._v(" 基本用法")]),t._v(" "),n("ol",[n("li",[t._v("observe()")])]),t._v(" "),n("p",[t._v("新创建的 MutationObserver 实例不会关联 DOM 的任何部分，需要用observe方法建立与DOM的联系。")]),t._v(" "),n("p",[t._v("observe()方法接收两个必需的参数：要观察其变化的 DOM 节点，以及一个 MutationObserverInit 对象。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" observer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<body> attributes changed'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Changed body class'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Changed body class")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <body> attributes changed ")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[t._v("回调与 MutationRecord")])]),t._v(" "),n("li",[n("p",[t._v("disconnect()方法")])])]),t._v(" "),n("p",[t._v("要提前终止执行回调，可以调用 disconnect()方法")]),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[n("p",[t._v("复用 MutationObserver")])]),t._v(" "),n("li",[n("p",[t._v("重用 MutationObserver")])])]),t._v(" "),n("p",[t._v("调用 disconnect()并不会结束 MutationObserver 的生命。还可以重新使用这个观察者，再将它关联到新的目标节点。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" observer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<body> attributeschanged'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这行代码会触发变化事件")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n observer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("disconnect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这行代码不会触发变化事件")]),t._v("\n document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reattach")]),t._v("\n observer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这行代码会触发变化事件")]),t._v("\n document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qux'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <body> attributes changed")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <body> attributes changed ")]),t._v("\n")])])]),n("h3",{attrs:{id:"mutationobserverinit-与观察范围"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mutationobserverinit-与观察范围"}},[t._v("#")]),t._v(" MutationObserverInit 与观察范围")]),t._v(" "),n("h3",{attrs:{id:"异步回调与记录队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步回调与记录队列"}},[t._v("#")]),t._v(" 异步回调与记录队列")]),t._v(" "),n("h3",{attrs:{id:"性能、内存与垃圾回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能、内存与垃圾回收"}},[t._v("#")]),t._v(" 性能、内存与垃圾回收")])])}),[],!1,null,null,null);s.default=e.exports}}]);